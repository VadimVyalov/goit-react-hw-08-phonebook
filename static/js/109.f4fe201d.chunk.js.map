{"version":3,"file":"static/js/109.f4fe201d.chunk.js","mappings":"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","sources":["components/Container/Container.styled.js","components/ContactForm/ContactForm.styled.js","redux/selectors.js","components/ContactForm/ContactForm.jsx","components/Loader/Loader.stiled.js","components/Loader/Loader.jsx","components/ContactList/ContactList.styled.js","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","pages/Tasks.js"],"sourcesContent":["import styled from 'styled-components';\n\nconst Container = styled.div`\n  display: inline-flex;\n  flex-direction: column;\n  padding: 10px;\n  margin: 20px;\n\n  border: 1px solid black;\n  border-radius: 10px;\n  box-shadow: rgb(0 0 0 / 20%) 2px 2px 2px -2px,\n    rgb(0 0 0 / 15%) 4px 4px 4px 0px, rgb(0 0 0 / 10%) 6px 6px 6px 2px;\n`;\n\nexport default Container;\n","import styled from 'styled-components';\nexport const FormContainer = styled.div`\n  form {\n    display: flex;\n    flex-direction: column;\n    gap: 15px;\n    label {\n      display: flex;\n      flex-direction: column;\n      gap: 10px;\n      justify-content: space-between;\n      span {\n        font-size: 16px;\n        font-weight: 500;\n        line-height: 1.25;\n        padding-right: 10px;\n      }\n    }\n  }\n`;\n\nexport const Button = styled.button`\n  cursor: pointer;\n  font-size: 16px;\n  margin-top: 10px;\n  padding: 5px;\n  border: 1px solid #a0a0a0;\n  border-radius: 4px;\n  background-color: #c0c0c0;\n  transition: transform 250ms ease-in-out;\n  :hover {\n    background-color: #5090ff;\n    transform: scale(1.05);\n  }\n`;\n\nexport const FormTitle = styled.h1`\n  font-size: 20px;\n  margin: 0;\n  padding: 5px;\n`;\n","import { createSelector } from '@reduxjs/toolkit';\nimport { contactsApi } from './contacts/contactsApi';\nexport const selectFilter = state => state.filter;\n\nconst inititial = [];\n\nexport const selectContacts = createSelector(\n  contactsApi.endpoints.getContacts.select(),\n  Result => Result?.data ?? inititial\n);\n\nexport const selectfiltredContact = createSelector(\n  [selectFilter, selectContacts],\n  (filter, contacts) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter)\n    );\n  }\n);\n","import { FormContainer, Button, FormTitle } from './ContactForm.styled';\nimport { useState } from 'react';\nimport { useSelector } from 'react-redux';\n//import { addContact } from 'redux/operations';\nimport { selectContacts } from 'redux/selectors';\nimport { useAddContactMutation } from 'redux/contacts/contactsApi';\n\nconst ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(selectContacts);\n  //const contactsApi = useSelector(selectResult);\n  const [\n    addContact, // This is the mutation trigger\n    // { isLoading: isUpdating }, // This is the destructured mutation result\n  ] = useAddContactMutation();\n\n  const handleChangeName = evt => {\n    setName(evt.target.value);\n  };\n\n  const handleChangeNumber = evt => {\n    setNumber(evt.target.value);\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    if (contacts.find(contact => contact.name === name)) {\n      window.alert(`Контакт ${name} вже є в списку`);\n      return;\n    }\n    // dispatch(addContact({ name, number }));\n    addContact({ name, number });\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n  //console.log(contacts);\n  return (\n    <FormContainer>\n      <FormTitle>Телефонна книга</FormTitle>\n\n      <form onSubmit={handleSubmit}>\n        <label>\n          <span>{'Ім`я'}</span>\n          <input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            placeholder=\"Enter name (Rosie Simpson)\"\n            value={name}\n            onChange={handleChangeName}\n          />\n        </label>\n        <label>\n          <span>{'Телефон'}</span>\n          <input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            placeholder=\"Enter phone (111-11-11)\"\n            value={number}\n            onChange={handleChangeNumber}\n          />\n        </label>\n\n        <Button type=\"submit\">\n          <span>{'Додати контакт'}</span>\n        </Button>\n      </form>\n    </FormContainer>\n  );\n};\n\nexport default ContactForm;\n","import styled from 'styled-components';\n\nexport const LoaderWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n","import { RotatingLines } from 'react-loader-spinner';\nimport { LoaderWrapper } from './Loader.stiled';\nconst Loader = ({ size }) => (\n  <LoaderWrapper>\n    <RotatingLines\n      strokeColor=\"#d61d1d\"\n      strokeWidth=\"4\"\n      animationDuration=\"1\"\n      width={size}\n      visible={true}\n    />\n  </LoaderWrapper>\n);\n\nexport default Loader;\n","import styled from 'styled-components';\n\nexport const ContactListContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  font-size: 16px;\n  width: 400px;\n\n  span {\n    margin-bottom: 5px;\n    font-size: 20px;\n    font-weight: 500;\n  }\n  ul {\n    list-style: none;\n    padding-left: 10px;\n    display: flex;\n    gap: 10px;\n    flex-direction: column;\n  }\n`;\n\nexport const ContactItem = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  //gap: 10px;\n  font-size: 15px;\n  span {\n    font-size: 20px;\n    text-align: end;\n    margin-right: 20px;\n  }\n  button {\n    cursor: pointer;\n    //font-size: 16px;\n\n    padding: 3px;\n    border: 1px solid #a0a0a0;\n    border-radius: 4px;\n    margin-left: 20px;\n    background-color: #c0c0c0;\n    transition: transform 250ms ease-in-out;\n    :hover {\n      background-color: #ff0505;\n      transform: scale(1.05);\n    }\n  }\n`;\n\nexport const ListTitle = styled.h2`\n  font-size: 18px;\n  margin: 0;\n  padding: 5px;\n`;\n","import { ContactItem } from 'components/ContactList/ContactList.styled';\nimport Loader from 'components/Loader/Loader';\nimport { useDeleteContactMutation } from 'redux/contacts/contactsApi';\n\nexport const ListItem = ({ id, name, number }) => {\n  const [deleteContact, { isLoading }] = useDeleteContactMutation();\n\n  return (\n    <ContactItem>\n      {name}:\n      <span>\n        {number}\n        <button type=\"button\" onClick={() => deleteContact(id)}>\n          {isLoading && <Loader size={15} />}delete\n        </button>\n      </span>\n    </ContactItem>\n  );\n};\n","import { ContactListContainer, ListTitle } from './ContactList.styled';\nimport { useSelector } from 'react-redux';\nimport { selectfiltredContact } from 'redux/selectors';\nimport { ListItem } from 'components/ContactListItem/ContactListItem';\n\nconst ContactList = () => {\n  const filtredContacts = useSelector(selectfiltredContact);\n\n  return filtredContacts.length ? (\n    <ContactListContainer>\n      <ListTitle>Контакти</ListTitle>\n      <ul>\n        {filtredContacts.map(contact => (\n          <ListItem key={contact.id} {...contact} />\n        ))}\n      </ul>\n    </ContactListContainer>\n  ) : (\n    <ListTitle>Контактів нема</ListTitle>\n  );\n};\n\nexport default ContactList;\n","import styled from 'styled-components';\n\nexport const FilterContainer = styled.div`\n  margin-top: 10px;\n  margin-bottom: 10px;\n  display: flex;\n\n  width: 100%;\n  label {\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    gap: 5px;\n    justify-content: space-between;\n    span {\n      font-size: 16px;\n      font-weight: 500;\n      line-height: 1.25;\n      padding-right: 10px;\n    }\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { FilterContainer } from './Filter.styled';\nimport { setFilter } from 'redux/filterSlice';\nimport { selectFilter } from 'redux/selectors';\nconst Filter = () => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n  const onChange = evt => {\n    dispatch(setFilter(evt.target.value.toLowerCase()));\n  };\n  return (\n    <FilterContainer>\n      <label>\n        <span>{'Пошук контактів за ім`ям'}</span>\n        <input\n          type=\"text\"\n          name=\"filter\"\n          // pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          value={filter}\n          onChange={onChange}\n        />\n      </label>\n    </FilterContainer>\n  );\n};\n\nexport default Filter;\n","// import { useEffect } from 'react';\n// import { useDispatch, useSelector } from 'react-redux';\n//import { Helmet } from 'react-helmet';\n\nimport Container from 'components/Container';\nimport ContactForm from 'components/ContactForm';\nimport Loader from 'components/Loader/Loader';\nimport ContactList from 'components/ContactList';\nimport Filter from 'components/Filter';\nimport { ListTitle } from 'components/ContactList/ContactList.styled';\nimport { useGetContactsQuery } from 'redux/contacts/contactsApi';\n\nexport default function Tasks() {\n  //   const dispatch = useDispatch();\n  //   const isLoading = useSelector(selectLoading);\n\n  //   useEffect(() => {\n  //     dispatch(fetchTasks());\n  //   }, [dispatch]);\n\n  //   return (\n  //     <>\n  //       <Helmet>\n  //         <title>Your tasks</title>\n  //       </Helmet>\n  //       <TaskEditor />\n  //       <div>{isLoading && 'Request in progress...'}</div>\n  //       <TaskList />\n  //     </>\n  //   );\n  const { isLoading, isError: error } = useGetContactsQuery();\n\n  return (\n    <Container>\n      {/* <Helmet>\n        <title>Your tasks</title>\n      </Helmet> */}\n      <ContactForm />\n      <Filter />\n      {isLoading && !error && <Loader size={300} />}\n      {!isLoading && !error && <ContactList />}\n      {error && (\n        <>\n          <ListTitle>Щось пішло не так</ListTitle>\n          <p>{error}</p>\n        </>\n      )}\n    </Container>\n  );\n}\n"],"names":["styled","_templateObject","_taggedTemplateLiteral","FormContainer","Button","_templateObject2","FormTitle","_templateObject3","selectFilter","state","filter","inititial","selectContacts","createSelector","contactsApi","Result","_Result$data","data","selectfiltredContact","contacts","contact","name","toLowerCase","includes","_useState","useState","_useState2","_slicedToArray","setName","_useState3","_useState4","number","setNumber","useSelector","_useAddContactMutatio","useAddContactMutation","addContact","reset","_jsxs","children","_jsx","onSubmit","evt","preventDefault","find","window","alert","concat","type","pattern","title","required","placeholder","value","onChange","target","LoaderWrapper","_ref","size","RotatingLines","strokeColor","strokeWidth","animationDuration","width","visible","ContactListContainer","ContactItem","ListTitle","ListItem","id","_useDeleteContactMuta","useDeleteContactMutation","_useDeleteContactMuta2","deleteContact","isLoading","onClick","Loader","filtredContacts","length","map","_objectSpread","FilterContainer","dispatch","useDispatch","setFilter","Tasks","_useGetContactsQuery","useGetContactsQuery","error","isError","Container","ContactForm","Filter","ContactList","_Fragment"],"sourceRoot":""}