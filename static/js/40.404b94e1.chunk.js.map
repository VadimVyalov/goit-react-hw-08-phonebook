{"version":3,"file":"static/js/40.404b94e1.chunk.js","mappings":"+OACA,EAAuB,2BAAvB,EAA0D,4B,SCK7CA,EAAe,WAC1B,IAAAC,GAAiBC,EAAAA,EAAAA,MAAVC,GAA6BC,EAAAA,EAAAA,GAAAH,EAAA,GAAvB,GAEbI,GAAqDC,EAAAA,EAAAA,IAAQ,CAC3DC,cAAe,CAAEC,KAAM,MAAOC,MAAO,eAAgBC,SAAU,cADzDC,EAAQN,EAARM,SAAUC,EAAYP,EAAZO,aAAcC,EAAKR,EAALQ,MAAOC,EAAST,EAATS,UAI/BC,EAAYD,EAAZC,QA0BR,OAzBAC,EAAAA,EAAAA,YAAU,WACJF,EAAUG,oBACZJ,EAAM,CAAEH,SAAU,GAAID,MAAO,KAK/BS,OAAOC,QAAQL,EAAUM,QAAQC,KAAI,SAAAC,GAAA,IAAAC,GAAAnB,EAAAA,EAAAA,GAAAkB,EAAA,GAAEE,EAAID,EAAA,GAAIE,EAAOF,EAAA,GAAPE,QAAO,OACpDC,QAAQC,IAAIH,EAAM,KAAMC,EAAQ,GAEpC,GAAG,CAACX,EAAWD,EAAOE,KA+BpBa,EAAAA,EAAAA,MAAA,QAAMC,UAAWC,EAAUC,SAAUnB,EAAaT,GAAQ6B,SAAA,EACxDJ,EAAAA,EAAAA,MAAA,SAAOC,UAAWC,EAAUE,SAAA,CAAC,SAE3BC,EAAAA,EAAAA,KAAA,SAAAC,EAAAA,EAAAA,GAAA,CACEV,KAAK,OACLW,YAAY,QACRxB,EAAS,OAAQ,CACnByB,SAAU,2EACVC,QAAS,CAAEC,MAAO,SAAUb,QAAS,kGAK3CG,EAAAA,EAAAA,MAAA,SAAOC,UAAWC,EAAUE,SAAA,CAAC,SAE3BC,EAAAA,EAAAA,KAAA,SAAAC,EAAAA,EAAAA,GAAA,CACEV,KAAK,OACLW,YAAY,SACRxB,EAAS,QAAS,CACpByB,SAAU,2EACVC,QAAS,CAAEC,MAAO,aAAcb,QAAS,kGAK/CG,EAAAA,EAAAA,MAAA,SAAOC,UAAWC,EAAUE,SAAA,CAAC,YAE3BC,EAAAA,EAAAA,KAAA,SAAAC,EAAAA,EAAAA,GAAA,CACEV,KAAK,WACLW,YAAY,YACRxB,EAAS,WAAY,CACvByB,SAAU,2GACVG,IAAK,GACLC,IAAK,EACLC,UAAW,WAKjBR,EAAAA,EAAAA,KAAA,UAAQT,KAAK,SAAQQ,SAAC,YAG5B,EC/Fe,SAASU,IACtB,OACET,EAAAA,EAAAA,KAAA,OAAAD,UAIEC,EAAAA,EAAAA,KAACjC,EAAY,KAGnB,C","sources":["webpack://goit-react-hw-08-phonebook/./src/components/RegisterForm/RegisterForm.module.css?a5d4","components/RegisterForm/RegisterForm.js","pages/Register.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"RegisterForm_form__Tv43W\",\"label\":\"RegisterForm_label__4pTXF\"};","import { useEffect } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useRegistMutation } from 'redux/auth/authApi';\n\nimport css from './RegisterForm.module.css';\n\nexport const RegisterForm = () => {\n  const [regist] = useRegistMutation();\n\n  const { register, handleSubmit, reset, formState } = useForm({\n    defaultValues: { name: 'AAA', email: 'aaa@mail.com', password: 'A123456a' },\n  });\n  // const { isDirty, isValid } = formState;\n  const { isValid } = formState;\n  useEffect(() => {\n    if (formState.isSubmitSuccessful) {\n      reset({ password: '', email: '' });\n    }\n\n    // console.log(formState.errors);\n\n    Object.entries(formState.errors).map(([type, { message }]) =>\n      console.log(type, '=>', message)\n    );\n  }, [formState, reset, isValid]);\n\n  // const handleSubmit = e => {\n  //   e.preventDefault();\n  //   const form = e.currentTarget;\n  //   dispatch(\n  //     register({\n  //       name: form.elements.name.value,\n  //       email: form.elements.email.value,\n  //       password: form.elements.password.value,\n  //     })\n  //   );\n  //   form.reset();\n  // };\n\n  return (\n    // <form className={css.form} onSubmit={handleSubmit} autoComplete=\"off\">\n    //   <label className={css.label}>\n    //     Username\n    //     <input type=\"text\" name=\"name\" />\n    //   </label>\n    //   <label className={css.label}>\n    //     Email\n    //     <input type=\"email\" name=\"email\" />\n    //   </label>\n    //   <label className={css.label}>\n    //     Password\n    //     <input type=\"password\" name=\"password\" />\n    //   </label>\n    //   <button type=\"submit\">Register</button>\n    // </form>\n    <form className={css.form} onSubmit={handleSubmit(regist)}>\n      <label className={css.label}>\n        Email\n        <input\n          type=\"text\"\n          placeholder=\"Name\"\n          {...register('name', {\n            required: 'Name не заповнено',\n            pattern: { value: /^\\S+$/i, message: 'Не вірний формат' },\n          })}\n        />\n      </label>\n\n      <label className={css.label}>\n        Email\n        <input\n          type=\"text\"\n          placeholder=\"Email\"\n          {...register('email', {\n            required: 'Mail не заповнено',\n            pattern: { value: /^\\S+@\\S+$/i, message: 'Не вірний формат' },\n          })}\n        />\n      </label>\n\n      <label className={css.label}>\n        Password\n        <input\n          type=\"password\"\n          placeholder=\"Password\"\n          {...register('password', {\n            required: 'Пароль не заповнено',\n            max: 10,\n            min: 7,\n            maxLength: 20,\n          })}\n        />\n      </label>\n\n      <button type=\"submit\">LogIn</button>\n    </form>\n  );\n};\n","import { RegisterForm } from 'components/RegisterForm/RegisterForm';\n//import { Helmet } from 'react-helmet';\nexport default function Register() {\n  return (\n    <div>\n      {/* <Helmet>\n        <title>Registration</title>\n      </Helmet> */}\n      <RegisterForm />\n    </div>\n  );\n}\n"],"names":["RegisterForm","_useRegistMutation","useRegistMutation","regist","_slicedToArray","_useForm","useForm","defaultValues","name","email","password","register","handleSubmit","reset","formState","isValid","useEffect","isSubmitSuccessful","Object","entries","errors","map","_ref","_ref2","type","message","console","log","_jsxs","className","css","onSubmit","children","_jsx","_objectSpread","placeholder","required","pattern","value","max","min","maxLength","Register"],"sourceRoot":""}